import sdl

final AMPLITUDE = 63
final SAMPLE_RATE = 44100
final SCREEN_WIDTH = 640
final SCREEN_HEIGHT = 480
final FPS = 60
final TICKS_PER_FRAME = (1 / FPS) * 1000 # 1 tick <-> millis

sdl.init(sdl.INIT_AUDIO | sdl.INIT_VIDEO)

################################################################
# Initialize Audio
################################################################
final spec = sdl.AudioSpec()
spec.freq = SAMPLE_RATE
spec.format = sdl.AUDIO_S8
spec.channels = 1
spec.samples = 4096
final buffer = ByteArray(SAMPLE_RATE // 10)
for i in range(len(buffer)):
  final t = i / SAMPLE_RATE
  buffer[i] = AMPLITUDE * sin(2.0 * PI * 441 * t)
if true:
  var i = len(buffer) - 1
  while i > 0 and abs(buffer[i]) > 1:
    print('erasing %s -> %s' % [i, buffer[i]])
    buffer[i] = 0
    i = i - 1
final adev = sdl.openAudioDevice(nil, 0, spec, nil, 0)
adev.pause(0)

################################################################
# Initialize Video
################################################################
var window = sdl.createWindow(
  "my window",
  sdl.WINDOWPOS_CENTERED, sdl.WINDOWPOS_CENTERED,
  SCREEN_WIDTH, SCREEN_HEIGHT, 0)
var r = sdl.createRenderer(window, -1, 0)
var kstate = sdl.getKeyboardState()

def eventLoop():
  final event = sdl.Event()
  while true:
    final startTicks = sdl.getTicks()

    while sdl.pollEvent(event):
      if event.type == sdl.QUIT:
        print('Quit event received')
        sdl.quit()
        return 0
      elif event.type == sdl.KEYDOWN and event.repeat:
        pass # ignore repeats

    if kstate[sdl.scancode.F]:
      r.setDrawColor(0, 100, 200, 255)
      final qs = adev.getQueuedSize()
      if qs < SAMPLE_RATE // 5:
        adev.queue(buffer)
        print('queued size - %r' % [qs])
      else:
        print('skipping (%r)' % [qs])
    else:
      r.setDrawColor(255, 160, 255, 255)
    r.clear()
    r.present()

    final endTicks = sdl.getTicks()
    final elapsedTicks = endTicks - startTicks
    if TICKS_PER_FRAME > elapsedTicks:
      sdl.delay((TICKS_PER_FRAME - elapsedTicks) // 1)

eventLoop()
