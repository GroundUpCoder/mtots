#ifndef mtots_m_sdl_dat_h
#define mtots_m_sdl_dat_h

/* This header is meant to be included only by mtots_m_sdl.c */

#define SDL_MAIN_HANDLED
#include <SDL.h>

#include "mtots_m_sdl_acb.h"

typedef struct {
  const char *name;
  double value;
} NumericConstant;

static NumericConstant numericConstants[] = {
  /* window stuff */
  { "WINDOW_FULLSCREEN", SDL_WINDOW_FULLSCREEN },
  { "WINDOW_OPENGL", SDL_WINDOW_OPENGL },
  { "WINDOW_SHOWN", SDL_WINDOW_SHOWN },
  { "WINDOW_HIDDEN", SDL_WINDOW_HIDDEN },
  { "WINDOW_BORDERLESS", SDL_WINDOW_BORDERLESS },
  { "WINDOW_RESIZABLE", SDL_WINDOW_RESIZABLE },
  { "WINDOW_MINIMIZED", SDL_WINDOW_MINIMIZED },
  { "WINDOW_MAXIMIZED", SDL_WINDOW_MAXIMIZED },
  { "WINDOW_MOUSE_GRABBED", SDL_WINDOW_MOUSE_GRABBED },
  { "WINDOW_INPUT_FOCUS", SDL_WINDOW_INPUT_FOCUS },
  { "WINDOW_MOUSE_FOCUS", SDL_WINDOW_MOUSE_FOCUS },
  { "WINDOW_FULLSCREEN_DESKTOP", SDL_WINDOW_FULLSCREEN_DESKTOP },
  { "WINDOW_FOREIGN", SDL_WINDOW_FOREIGN },
  { "WINDOW_ALLOW_HIGHDPI", SDL_WINDOW_ALLOW_HIGHDPI },
  { "WINDOW_MOUSE_CAPTURE", SDL_WINDOW_MOUSE_CAPTURE },
  { "WINDOW_ALWAYS_ON_TOP", SDL_WINDOW_ALWAYS_ON_TOP },
  { "WINDOW_SKIP_TASKBAR", SDL_WINDOW_SKIP_TASKBAR },
  { "WINDOW_UTILITY", SDL_WINDOW_UTILITY },
  { "WINDOW_TOOLTIP", SDL_WINDOW_TOOLTIP },
  { "WINDOW_POPUP_MENU", SDL_WINDOW_POPUP_MENU },
  { "WINDOW_KEYBOARD_GRABBED", SDL_WINDOW_KEYBOARD_GRABBED },
  { "WINDOW_VULKAN", SDL_WINDOW_VULKAN },
  { "WINDOW_METAL", SDL_WINDOW_METAL },
  { "WINDOW_INPUT_GRABBED", SDL_WINDOW_INPUT_GRABBED },

  {"WINDOWPOS_CENTERED", SDL_WINDOWPOS_CENTERED},
  {"WINDOWPOS_UNDEFINED", SDL_WINDOWPOS_UNDEFINED},

  /* init constants */
  { "INIT_TIMER", SDL_INIT_TIMER},
  { "INIT_AUDIO", SDL_INIT_AUDIO},
  { "INIT_VIDEO", SDL_INIT_VIDEO}, /* auto-init events */
  { "INIT_JOYSTICK", SDL_INIT_JOYSTICK}, /* auto-init events */
  { "INIT_HAPTIC", SDL_INIT_HAPTIC},
  { "INIT_GAMECONTROLLER", SDL_INIT_GAMECONTROLLER}, /* auto-init JOYSTICK */
  { "INIT_EVENTS", SDL_INIT_EVENTS},
  { "INIT_EVERYTHING", SDL_INIT_EVERYTHING},

  /* Other audio constants */
  { "AUDIO_TRACK_COUNT", AUDIO_TRACK_COUNT },

  /* audio sample formats */
  { "AUDIO_S8", AUDIO_S8 },
  { "AUDIO_U8", AUDIO_U8 },
  { "AUDIO_S16LSB", AUDIO_S16LSB },
  { "AUDIO_S16MSB", AUDIO_S16MSB },
  { "AUDIO_S16SYS", AUDIO_S16SYS },
  { "AUDIO_S16", AUDIO_S16 },
  { "AUDIO_S16LSB", AUDIO_S16LSB },
  { "AUDIO_U16LSB", AUDIO_U16LSB },
  { "AUDIO_U16MSB", AUDIO_U16MSB },
  { "AUDIO_U16SYS", AUDIO_U16SYS },
  { "AUDIO_U16", AUDIO_U16 },
  { "AUDIO_U16LSB", AUDIO_U16LSB },
  { "AUDIO_S32LSB", AUDIO_S32LSB },
  { "AUDIO_S32MSB", AUDIO_S32MSB },
  { "AUDIO_S32SYS", AUDIO_S32SYS },
  { "AUDIO_S32", AUDIO_S32 },
  { "AUDIO_S32LSB", AUDIO_S32LSB },
  { "AUDIO_F32LSB", AUDIO_F32LSB },
  { "AUDIO_F32MSB", AUDIO_F32MSB },
  { "AUDIO_F32SYS", AUDIO_F32SYS },
  { "AUDIO_F32", AUDIO_F32 },
  { "AUDIO_F32LSB", AUDIO_F32LSB },

  /* Wave Forms */
  { "WAVE_FORM_SINE", WAVE_FORM_SINE },
  { "WAVE_FORM_SAWTOOTH", WAVE_FORM_SAWTOOTH },
  { "WAVE_FORM_SQUARE", WAVE_FORM_SQUARE },
  { "WAVE_FORM_TRIANGLE", WAVE_FORM_TRIANGLE },

  /* Event types */
  {"FINGERMOTION", SDL_FINGERMOTION},
  {"FINGERDOWN", SDL_FINGERDOWN},
  {"FINGERUP", SDL_FINGERUP},
  {"KEYDOWN", SDL_KEYDOWN},
  {"KEYUP", SDL_KEYUP},
  {"MOUSEMOTION", SDL_MOUSEMOTION},
  {"MOUSEBUTTONDOWN", SDL_MOUSEBUTTONDOWN},
  {"MOUSEBUTTONUP", SDL_MOUSEBUTTONUP},
  {"MOUSEWHEEL", SDL_MOUSEWHEEL},
  {"QUIT", SDL_QUIT},
};

#endif/*mtots_m_sdl_dat_h*/
