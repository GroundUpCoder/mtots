# A bit of a hack mechanism for defining globals
# that are easier to define in mtots itself rather than purely in C.
#
# The main issues currently are:
#   * it is currently not possible to call mtots functions from C
#   * it is currently not possible to iterate over arbitrary iterables from C


def list(iterable):
  final items = []
  for item in iterable:
    items.append(item)
  return items


def tuple(iterable):
  var items = []
  for item in iterable:
    items.append(item)
  return __tuple__(items)


def set(iterable):
  var s = {}
  for item in iterable:
    s[item] = nil
  return s


def sorted(iterable, key=nil):
  final items = []
  for item in iterable:
    items.append(item)

  if key:
    final keys = []
    for item in items:
      keys.append(key(item))
    __sort__(items, keys)
  else:
    __sort__(items)

  return items


class __List__:
  def sort(key=nil):
    if key:
      final keys = []
      for item in this:
        keys.append(key(item))
      __sort__(this, keys)
    else:
      __sort__(this)
